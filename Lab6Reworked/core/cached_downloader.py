from interfaces.downloader import Downloader


class CachedDownloader(Downloader):

    def __init__(self, real_downloader: Downloader):
        self._real_downloader = real_downloader
        self._cache: dict[str, bytes] = {}

    def download(self, file_path: str) -> bytes:
        if file_path in self._cache:
            print(f"üéØ –ë–µ—Ä—É {file_path} –∏–∑ –∫–µ—à–∞ - –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å!")
            return self._cache[file_path]

        print(f"üîç –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–µ—à–µ, –ø—Ä–∏–¥–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å...")
        result = self._real_downloader.download(file_path)
        self._cache[file_path] = result
        print(f"‚ú® –û—Ç–ª–∏—á–Ω–æ! –°–æ—Ö—Ä–∞–Ω–∏–ª {file_path} –≤ –∫–µ—à –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        return result